## Get tag version with:
#  ${{ github.event.release.tag_name }}

name: Test Python pipeline

on:
  push:
    branches:
      - feat/ci
    tags:
      - "v*"

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      ## Install PDM in the pipeline
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          # Version range or exact version of a Python version to use, the same as actions/setup-python
          python-version: ${{ matrix.python-version }}
          cache: true
          # https://github.com/marketplace/actions/setup-pdm#caches
          cache-dependency-path: |
            ./pdm.lock
          # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
          architecture: x64
          # The version of PDM to install. Leave it as empty to use the latest version from PyPI, or 'head' to use the latest version from GitHub
          # version:
          # Allow prerelease versions of PDM to be installed
          prerelease: false
          # Enable PEP 582 package loading globally
          enable-pep582: false
          # Allow prerelease versions of Python to be installed. For example if only 3.12-dev is available, 3.12 will fallback to 3.12-dev
          allow-python-prereleases: false

      - name: Install dependencies
        run: pdm sync

      - name: Lint with Ruff
        ## Custom script in pyproject.toml
        run: pdm run format

  release:
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/head/feat/ci' }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.11"]
        ## , macOS-latest, windows-latest
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      ## Install PDM in the pipeline
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          # Version range or exact version of a Python version to use, the same as actions/setup-python
          python-version: ${{ matrix.python-version }}
          cache: true
          # https://github.com/marketplace/actions/setup-pdm#caches
          cache-dependency-path: |
            ./pdm.lock
          # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
          architecture: x64
          # The version of PDM to install. Leave it as empty to use the latest version from PyPI, or 'head' to use the latest version from GitHub
          # version:
          # Allow prerelease versions of PDM to be installed
          prerelease: false
          # Enable PEP 582 package loading globally
          enable-pep582: false
          # Allow prerelease versions of Python to be installed. For example if only 3.12-dev is available, 3.12 will fallback to 3.12-dev
          allow-python-prereleases: false

      - name: Bump version
        run: |
          pdm bump micro

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
